name: build nginx-quic

on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
         go-version: 1.17
         stable: false
      
      - name: depend
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install build-essential ca-certificates zlib1g-dev libpcre3 libpcre3-dev tar unzip libssl-dev wget curl git cmake ninja-build gnupg2 lsb-release libunwind-dev
          echo "deb https://nginx.org/packages/mainline/debian `lsb_release -cs` nginx"     | sudo tee /etc/apt/sources.list.d/nginx.list
          echo "deb-src http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx"     | sudo tee /etc/apt/sources.list.d/nginx.list
          curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
          sudo apt-get install nginx
          
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
         version: 11
         platform: x64

  
      - name: boringssl
        run: |
          git clone --depth=1 https://github.com/google/boringssl.git
          cd boringssl
          mkdir build
          cd build
          cmake -GNinja ..
          ninja
          cd ../..
          mkdir -p boringssl/.openssl/lib
          cp boringssl/build/crypto/libcrypto.a boringssl/build/ssl/libssl.a boringssl/.openssl/lib
          cd boringssl/.openssl
          ln -s ../include .
          cd ../..
          
          
      - name: hg
        run: |
          sudo apt-get install hgsubversion
          hg clone -b quic https://hg.nginx.org/nginx-quic
          cd nginx-quic
          ./auto/configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_realip_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=-I../boringssl/include --with-ld-opt='-L../boringssl/build/ssl -L../boringssl/build/crypto' --with-http_v3_module --with-http_quic_module --with-stream_quic_module
          make
      - uses: actions/upload-artifact@v2
        with:
          name: nginx-quic
          path: /home/runner/work/nginx-quic/nginx-quic/nginx-quic/objs/nginx
          
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: nginx-quic
          file: /home/runner/work/nginx-quic/nginx-quic/nginx-quic/objs/nginx
          tag: ${{ github.ref }}
          overwrite: true
